name: Build and Publish NuGet Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:7.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.303' # o el que uses

      - name: Restore dependencies
        run: dotnet restore Bank

      - name: Run tests
        run: dotnet test Bank --collect:"XPlat Code Coverage"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: 'Bank/**/TestResults/*.trx'

      - name: Install SonarScanner
        run: |
            dotnet tool install --global dotnet-sonarscanner
            echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Begin SonarCloud analysis
        working-directory: ./Bank
        run: |
              dotnet sonarscanner begin \
                /k:"si784_apibanco" \
                /o:"si784" \
                /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
                /d:sonar.host.url="https://sonarcloud.io" \
                /d:sonar.projectBaseDir="$GITHUB_WORKSPACE/Bank"
        env:
          PATH: ${{ github.workspace }}/.dotnet/tools:$PATH
          
      - name: Build the solution
        run: dotnet build Bank --no-restore

      - name: Test
        working-directory: ./Bank
        run: dotnet test --collect:"XPlat Code Coverage"

      - name: Verificar si 'sh' está instalado
        run: |
          if command -v sh; then
            echo "✅ 'sh' está disponible"
          else
            echo "❌ 'sh' NO está disponible"
            exit 1
          fi

      - name: End SonarCloud analysis
        working-directory: ./Bank
        run: 
            dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          PATH: ${{ github.workspace }}/.dotnet/tools:$PATH

      - name: Pack NuGet package
        run: dotnet pack Bank/Bank.WebApi/Bank.WebApi.csproj -c Release -o ./nuget

      - name: Publish to GitHub Packages
        run: dotnet nuget push ./nuget/*.nupkg --source "https://nuget.pkg.github.com/nkmelndz/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add GitHub NuGet source
        run: dotnet nuget add source --username <USERNAME> --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/<USERNAME>/index.json"
